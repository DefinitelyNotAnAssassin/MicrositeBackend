# Generated by Django 4.2.15 on 2024-10-21 15:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("Models", "0002_curriculum_student_program_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="curriculum",
            name="year",
            field=models.CharField(
                choices=[
                    ("2016-2017", "2016-2017"),
                    ("2017-2018", "2017-2018"),
                    ("2018-2019", "2018-2019"),
                    ("2019-2020", "2019-2020"),
                    ("2020-2021", "2020-2021"),
                    ("2021-2022", "2021-2022"),
                    ("2022-2023", "2022-2023"),
                    ("2023-2024", "2023-2024"),
                    ("2024-2025", "2024-2025"),
                ],
                max_length=32,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="student",
            name="curriculum_year",
            field=models.CharField(
                choices=[
                    ("2016-2017", "2016-2017"),
                    ("2017-2018", "2017-2018"),
                    ("2018-2019", "2018-2019"),
                    ("2019-2020", "2019-2020"),
                    ("2020-2021", "2020-2021"),
                    ("2021-2022", "2021-2022"),
                    ("2022-2023", "2022-2023"),
                    ("2023-2024", "2023-2024"),
                    ("2024-2025", "2024-2025"),
                ],
                default="2024-2025",
                max_length=100,
            ),
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        choices=[
                            ("SCMCS", "SCMCS"),
                            ("SNAHS", "SNAHS"),
                            ("SMLS", "SMLS"),
                            ("SITHM", "SITHM"),
                            ("SASE", "SASE"),
                        ],
                        default="SCMCS",
                        max_length=32,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("content", models.TextField()),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="Models.student"
                    ),
                ),
            ],
        ),
    ]
